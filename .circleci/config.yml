version: 2.1

orbs:
  ruby: circleci/ruby@1.0
  node: circleci/node@2
  cst: cst/framework@dev:phase_1

mysql_envs: &mysql_envs
  MYSQL_ROOT_PASSWORD: rootpw
  MYSQL_DATABASE: test_db
  MYSQL_USER: user
  MYSQL_PASSWORD: passw0rd

common_envs: &common_envs
  environment:
    BUNDLE_JOBS: "3"
    BUNDLE_RETRY: "3"
    MYSQL_HOST: 127.0.0.1
    MYSQL_PORT: 3306
    RAILS_ENV: test
    <<: *mysql_envs

commands:
  pre-rspec-step:
    steps:
      - cst/wait-for-mysql
      - cst/wait-for-redis
      - run:
          name: Database setup
          command: SKIP_CUSTOM_INIT=true bundle exec rails db:schema:load --trace
jobs:
  validate-bundler:
    executor: cst/ruby-base
    steps:
      - cst/bundler-preamble:
          keep-lock-file: true
      - cst/wait-for-mysql
      - cst/wait-for-redis
      - run:
          name: Validate Version Matches Gemfile.lock
          command: bin/validate_bundler
  publish-rubygems:
    executor: cst/ruby-base
    steps:
      - cst/bundler-preamble:
          keep-lock-file: true
      - cst/wait-for-mysql
      - cst/wait-for-redis
      - run:
          name: Publish Ruby Gems
          command: |
            bin/publish_ruby_gems
  publish-github:
    executor: cst/ruby-base
    steps:
      - cst/bundler-preamble:
          keep-lock-file: true
      - cst/wait-for-mysql
      - cst/wait-for-redis
      - run:
          name: 'Get Go'
          command: |
            sudo apt-get update -qq
            sudo apt-get -y --no-install-recommends install golang-go
      - run:
          name: 'Set Git stats'
          command: |
            git config user.name $GITHUB_USER
            git config user.email $GITHUB_EMAIL
      - run:
          name: 'Download GHR'
          command: |
            curl -sSL https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz | tar xz -f - -C . ghr_v0.13.0_linux_amd64/ghr
            mv ghr_v0.13.0_linux_amd64/ghr .
            rm -rf ghr_v0.13.0_linux_amd64
            chmod 0755 ghr
      - run:
          name: Publish Git
          command: |
            export GHRLOCATION=ghr
            bin/publish_git
  rspec-temp:
    executor:
      name: cst/ruby-base
      ruby-version: "2.7.5-node"
    environment:
      BUNDLER_RAILS_VERSION: "~> 6"
    steps:
      - cst/bundler-preamble:
          ruby-version: "2.7.5"
          additional-cache-tag: "~> 6"
      - cst/wait-for-mysql
      - cst/wait-for-redis
      - run:
          name: Database setup
          command: SKIP_CUSTOM_INIT=true bundle exec rails db:schema:load --trace
      - cst/rspec-test:
          code-climate-report: true
          rspec-system-args: "SKIP_CUSTOM_INIT=false SIMPLE_COV_RUN=true"

  test:
    parameters:
      ruby-version:
        default: "2.7.5"
        type: string
        description: "Ruby version to test against"
      rails-version:
        default: "~> 5.2"
        type: string
        description: "Rails version to test against"
    executor:
      name: cst/ruby-base
      ruby-version: << parameters.ruby-version >>
    environment:
      BUNDLER_RAILS_VERSION: << parameters.rails-version >>
    steps:
      - cst/bundler-preamble:
          ruby-version: "<< parameters.ruby-version >>"
          additional-cache-tag: << parameters.rails-version >>
      - cst/wait-for-mysql
      - cst/wait-for-redis
      - run:
          name: Database setup
          command: SKIP_CUSTOM_INIT=true bundle exec rails db:schema:load --trace
      - run:
          name: Setup Climate Control test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Ruby Version << parameters.ruby-version >>
          command: echo "Running test against ruby version $(ruby -v)"
      - run:
          name: Rails Version << parameters.rails-version >>
          command: echo "Running test against rails version ${BUNDLER_RAILS_VERSION}"

      - run:
          name: Run le tests
          command: |
            ./cc-test-reporter before-build
            SKIP_CUSTOM_INIT=false SIMPLE_COV_RUN=true bundle exec rspec --format RspecJunitFormatter --out test-results/rspec/rspec.xml --format progress --color
            ./cc-test-reporter after-build format-coverage -t simplecov

      - when:
          condition:
            equal:
              [
                required-test-ruby2.7.5-node-rails~> 5.2,
                required-test-ruby<< parameters.ruby-version >>-rails<< parameters.rails-version >>,
              ]
          steps:
            - run:
                name: Test reporter send
                command: ./cc-test-reporter before-build

workflows:
  version: 2
  yeet-le-jobs:
    jobs:
      - validate-bundler
      - cst/rspec-rails-ruby:
          rspec-system-args: "SKIP_CUSTOM_INIT=false SIMPLE_COV_RUN=true"
          rails-version: "~> 6"
          ruby-version: "2.7.5-node"
          database-migration-command: "SKIP_CUSTOM_INIT=true bundle exec rails db:schema:load --trace"
          database-migration: true
      - cst/rspec-rails-ruby:
          rspec-system-args: "SKIP_CUSTOM_INIT=false SIMPLE_COV_RUN=true"
          rails-version: "~> 6"
          ruby-version: "3.0.1-node"
          database-migration-command: "SKIP_CUSTOM_INIT=true bundle exec rails db:schema:load --trace"
          database-migration: true
          code-climate-report: false
      - cst/rspec-rails-ruby:
          name: "this should fail"
          rspec-system-args: "SKIP_CUSTOM_INIT=false SIMPLE_COV_RUN=true"
          rails-version: "~> 6"
          ruby-version: "3.0.1-node"
          database-migration-command: "SKIP_CUSTOM_INIT=true bundle exec rails db:schema:load --trace"
          database-migration: true
          cc-report-collect-rails: "this should not report"
          cc-report-collect-ruby: "this should not report"
      - cst/rspec-rails-ruby:
          name: "this should pass"
          rspec-system-args: "SKIP_CUSTOM_INIT=false SIMPLE_COV_RUN=true"
          rails-version: "~> 6"
          ruby-version: "3.0.1-node"
          database-migration-command: "SKIP_CUSTOM_INIT=true bundle exec rails db:schema:load --trace"
          database-migration: true
          cc-report-collect-rails: "~> 6"
          cc-report-collect-ruby: "3.0.1-node"
      - test:
          matrix:
            parameters:
              ruby-version: ["2.7.5-node" , "3.0.3-node"]
              rails-version: ["~> 5.2", "~> 6.0.0" , "~> 6"]
            exclude:
              - ruby-version: "3.0.3-node"
                rails-version: "~> 5.2"
            alias: required-matrix-tests
          name: test-ruby<< matrix.ruby-version >>-rails<< matrix.rails-version >>
      - publish-github:
          requires:
            - required-matrix-tests
          filters:
            branches:
              only:
                - main
      - publish-rubygems:
          requires:
            - required-matrix-tests
          filters:
            branches:
              only:
                - main
