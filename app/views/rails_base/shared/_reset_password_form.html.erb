<%= form_for(:user, as: :user, url: url, html: { method: :post, class: 'password-reset-needs-validation', id: 'password-reset-confirmation', novalidate: true }) do |f| %>
	<div class="field form-group row">
	  <div class="col-md-10 offset-md-1">
      <%= f.password_field :password, autofocus: true, autocomplete: "new-password", placeholder: "Password", class: 'form-control', required: true %>
      <div class="invalid-feedback">
        <%= RailsBase::Authentication::Constants::MP_REQ_MESSAGE %>
      </div>
	  </div>
  </div>
  <div class="field form-group row">
    <div class="col-md-10 offset-md-1">
      <%= f.password_field :password_confirmation, autocomplete: "new-password", placeholder: "Password Confirmation", class: 'form-control', required: true %>
      <div class="invalid-feedback">
        Password Confirmation does not match Password
      </div>
      <div class="valid-feedback">
        Password and Password Confirmation match!
      </div>
    </div>
	</div>

  <% if sign_in_flow %>
    <div class="actions row">
      <div class="col-md-10 offset-md-1 text-center">
        <div class="row">
          <div class="col-md-9">
            <%= f.submit "Reset Password", class: "reset-password-submit btn btn_success btn-block", disabled: true %>
          </div>
          <div class="col-md-3">
            <a class="btn btn_primary btn-block" href="<%=RailsBase.url_routes.new_user_session_path%>" role="button">Sign in</a>
          </div>
        </div>
      </div>
    </div>
  <% else %>
  <div class="actions row">
    <div class="col-md-10 offset-md-1 text-center">
      <%= f.submit "Reset Password", class: "btn btn_success btn-block" %>
    </div>
  </div>
  <% end %>
<% end %>


<script type="text/javascript">
  function user_password_validity(){
    var value = $('#user_password').val()
    if (value < <%= RailsBase::Authentication::Constants::MP_MIN_LENGTH %>){
      return false
    }

    var numbers = value.replace(/[a-zA-Z]/g,'')
    if(numbers.length < <%= RailsBase::Authentication::Constants::MP_MIN_NUMS %>){
      return false
    }

    var chars = value.replace(/[0-9]/g,'')
    if(chars.length < <%= RailsBase::Authentication::Constants::MP_MIN_ALPHA %>){
      return false
    }

    var special_chars = value.replace(/[0-9a-zA-Z]/g,'')

    if (special_chars.length == 0) {
      return true
    }
    password_allowed_special_chars = <%= raw (RailsBase.config.auth.password_allowed_special_chars || "").split("") %>

    special_chars_array = special_chars.split("")
    unknown_chars = []
    for (let i = 0; i < special_chars_array.length; i++) {
      if(!password_allowed_special_chars.includes(special_chars_array[i])){
        unknown_chars.push(special_chars_array[i])
      }
    }
    if(unknown_chars.length > 0) {
      return false
    }
    true
  };

  $('#user_password').focus(function() {
    $('.reset-password-submit').prop('disabled', true);
    $('#user_password_confirmation').val('')
    $('#user_password_confirmation').removeClass('is-invalid')
    $('#user_password_confirmation').removeClass('is-valid')
    $('#user_password').removeClass('is-valid')
    $('#user_password').removeClass('is-invalid')
  });

  $('#user_password').blur(function() {
    if (user_password_validity() === false) {
      $('#user_password').focus();
      $('#user_password').val('');
      $('#user_password').addClass('is-invalid');
    } else {
      $('#user_password').removeClass('is-invalid');
      $('.reset-password-submit').prop('disabled', false);
    }
  });

  $('.password-reset-needs-validation').submit(function( event ) {
    if ($('#user_password_confirmation').val() === $('#user_password').val()){
      return
    }

    event.preventDefault();
    event.stopPropagation();
    $('#user_password_confirmation').addClass('is-invalid');
    $('#user_password_confirmation').val('')
    $('#user_password_confirmation').focus();
  });

  $("#user_password_confirmation").keyup(function(event){
    if ($('#user_password_confirmation').val() === $('#user_password').val()){
      $('#user_password_confirmation').addClass('is-valid');
      $('#user_password_confirmation').removeClass('is-invalid');
      $('#user_password').addClass('is-valid');
    } else {
      $('#user_password_confirmation').removeClass('is-valid')
      $('#user_password').removeClass('is-valid');
    }
  });
</script>
