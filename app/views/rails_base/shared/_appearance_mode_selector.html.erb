<% if RailsBase.appearance.enabled %>
  <% if display %>
  <!-- Button trigger modal -->
  <button type="button" class="btn btn-info <%= btn%> close-me" data-toggle="modal" data-target="#appearance_mode_selector">
    Dark/Lite Mode
  </button>

  <!-- Modal -->
  <div class="modal fade" id="appearance_mode_selector" tabindex="-1" role="dialog" aria-labelledby="appearance_mode_selectorTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="appearance_mode_selectorTitle">Select Appearance Mode</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <h5> Currently using <span id='appearnace_mode_text'><%= appearance_mode_drop_down[:current] %> <span> </h5>
          <%= select_tag 'appearance_mode_selector_id', options_for_select(appearance_mode_drop_down[:types_a]), class: 'form-control', include_blank: 'Select Appearance Mode' %>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-block btn-secondary" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>
  <% end %>
  <script type="text/javascript">
    <% dark = RailsBase::Configuration::Appearance::DARK_MODE %>
    <% light = RailsBase::Configuration::Appearance::LIGHT_MODE %>
    var type_mapping = JSON.parse('<%= raw RailsBase::Configuration::Appearance::APPEARANCE_TYPES.to_json %>')

    var cookie_name = `<%= RailsBase::ApplicationController::APPEARANCE_MODE_COOKIE %>`;
    var dark_mode_changes = [
      {
        'descriptor': 'thead',
        '<%= dark %>': '<%= RailsBase.appearance.t_header.dark_mode %>',
        '<%= light %>': '<%= RailsBase.appearance.t_header.light_mode %>'
      },
      {
        'descriptor': 'tbody',
        '<%= dark %>': '<%= RailsBase.appearance.t_body.dark_mode %>',
        '<%= light %>': '<%= RailsBase.appearance.t_body.light_mode %>'
      },
      {
        'descriptor': 'body',
        '<%= dark %>': '<%= RailsBase.appearance.bg_color.dark_mode %>',
        '<%= light %>': '<%= RailsBase.appearance.bg_color.light_mode %>'
      },
      {
        'descriptor': 'input:not(.btn)', // inputs but not button inputs
        '<%= dark %>': '<%= RailsBase.appearance.bg_color.dark_mode %>',
        '<%= light %>': '<%= RailsBase.appearance.bg_color.light_mode %>'
      },
      {
        'descriptor': '.modal-content',
        '<%= dark %>': '<%= RailsBase.appearance.bg_color.dark_mode %>',
        '<%= light %>': '<%= RailsBase.appearance.bg_color.light_mode %>'
      },
      {
        'descriptor': 'select',
        '<%= dark %>': '<%= RailsBase.appearance.bg_color.dark_mode %>',
        '<%= light %>': '<%= RailsBase.appearance.bg_color.light_mode %>'
      },
      {
        'descriptor': '.navbar',
        '<%= dark %>': '<%= RailsBase.appearance.navbar.dark_mode %>',
        '<%= light %>': '<%= RailsBase.appearance.navbar.light_mode %>'
      },
      {
        'descriptor': '.<%= RailsBase::ApplicationController::APPEARANCE_TEXT_CLASS %>',
        '<%= dark %>': '<%= RailsBase.appearance.text.dark_mode %>',
        '<%= light %>': '<%= RailsBase.appearance.text.light_mode %>'
      },
    ]
    function toggle_dark_mode(set_key){
      set_key ||= get_cookie(cookie_name)
      var remove_keys = Object.keys(type_mapping)
      remove_keys.splice( $.inArray(set_key, remove_keys),1 );
      for (i = 0; i < dark_mode_changes.length; ++i) {
        var descriptor = dark_mode_changes[i]['descriptor']
        for (s = 0; s < remove_keys.length; ++s) {
          $(`${descriptor}`).removeClass(dark_mode_changes[i][remove_keys[s]])
        }
        var insert = dark_mode_changes[i][set_key]
        $(`${descriptor}`).addClass(insert)
      }
    }

    $('#appearance_mode_selector_id').change(function() {
      var value = $("#appearance_mode_selector_id").val();
      if(!value){
        return
      }
      set_cookie(cookie_name, '')
      set_and_toggle_mode(value)
    })

    $(document).ready(function(){
      $('#appearance_mode_selector').appendTo('body');
      set_and_toggle_mode( `<%= cookies[RailsBase::ApplicationController::APPEARANCE_MODE_COOKIE] || RailsBase.appearance.default_mode %>`)
      $(document).ajaxComplete(function () {
        set_and_toggle_mode()
      });
    });

    function set_and_toggle_mode(value) {
      if(value){
        set_cookie(cookie_name, value);
      }
      $('#appearnace_mode_text').text(type_mapping[value])
      if(get_cookie(cookie_name)=='<%= RailsBase::Configuration::Appearance::MATCH_OS%>'){
        if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
          toggle_dark_mode('<%= dark %>');
        } else {
          toggle_dark_mode('<%= light %>');
        }
      } else {
        toggle_dark_mode();

      }
    }

    function set_cookie(name, value) {
      document.cookie = `${name}=${value}`
    }

    function get_cookie(name) {
      var cookie = document.cookie
      return cookie.split('; ').find(row => row.startsWith(`${name}=`)).split('=')[1];
    }

    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {
      set_and_toggle_mode($.cookie(cookie_name))
    });
  </script>

  <style type="text/css">
    .modal .modal-content.bg-dark {
      background: black;
      color: gray ;
    }
    select.bg-dark {
      background-color: black !important;
      color: white ;
    }
    input.bg-dark:not([type='submit']) {
      background-color: black !important;
      color: white ;
    }

  </style>

<% end %>