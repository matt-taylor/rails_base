<div class="row">
  <div class="col-md-10 offset-md-1">
    <div class="row">
      <table class="tableFixHead table table-striped table-bordered">
        <thead class="thead-dark text-center">
          <th> UserId </th>
          <th> Full Name </th>
          <th> Email</th>
          <th> Email Validated? </th>
          <th> Phone Number </th>
          <th> MFA enabled </th>
          <th> Admin Level </th>
          <th> Last Logged In </th>
          <th> Impersonate User </th>
        </thead>
        <tbody class='text-center'>
        <% User.all.each do |user| %>
          <% id_base = "#{user.id}_#{(10**10*rand).to_i}" %>
          <tr>
            <td>
              <%= user.id %>
            </td>
            <td id='<%= id_base %>_full_name' >
              <%= render partial: 'rails_base/shared/admin_modify_text', locals: { type: 'full_name', current_value: user.full_name, user: user, parent: id_base, modal_partial: 'rails_base/shared/admin_modify_name' } %>
            </td>
            <td id='<%= id_base %>_email'>
              <%= render partial: 'rails_base/shared/admin_risky_change', locals: { type: 'email', current_value: user.email, user: user, parent: id_base, modal_partial: 'rails_base/shared/admin_modify_email' } %>
            </td>
            <td id='<%= id_base %>_email_validated'>
              <%= render partial: 'rails_base/shared/admin_toggle_button', locals: { type: 'email_validated', checked: user.email_validated, user: user, data_on: 'valid', data_off: 'invalid', parent: id_base } %>
            </td>
            <td id='<%= id_base %>_phone_number'>
              <%= render partial: 'rails_base/shared/admin_risky_change', locals: { type: 'phone_number', current_value: user.phone_number, user: user, parent: id_base, modal_partial: 'rails_base/shared/admin_modify_email' } %>
            </td>
            <td id='<%= id_base %>_mfa_enabled' >
              <%= render partial: 'rails_base/shared/admin_toggle_button', locals: { type: 'mfa_enabled', checked: user.mfa_enabled, user: user, data_on: 'enbaled', data_off: 'disabled', parent: id_base } %>
            </td>
            <td id='<%= id_base %>_admin' >
              <%= render partial: 'rails_base/shared/admin_selector_dropdown', locals: { type: 'admin', options: User::ADMIN_ENUMS, selector: user.admin.to_sym, user: user, parent: id_base } %>
            </td>
            <td id='<%= id_base %>_last_sign_in_at' >
              <%= user.last_sign_in_at || 'never' %>
            </td>
            <td id='<%= id_base %>_impersonate' >
              <%= button_to 'Impersonate', RailsBase.url_routes.switch_user_path(scope_identifier: "user_#{user.id}"), method: :post, class: 'btn btn-block btn-warning' %>
            </td>
          </tr>
        <% end %>
        </tbody>
      </table>
    </div>
  </div>
</div>

<script type="text/javascript">
  function admin_risky_mfa_send(modal_id){
    _rails_base_hide_displays()
    $.ajax({
      type: "POST",
      url: "<%= RailsBase.url_routes.admin_validate_intent_path%>",
      headers: { 'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content') },
      success: function(data) {
        $(`#${modal_id}`).modal('show');
        admin_risky_icon_proceed()
      },
      error: function(xhr, status, error) {
        _rails_base_display_alert(xhr.responseJSON.message)
        admin_risky_icon_proceed()
      }
    })
  }

  function admin_risky_mfa_confirm(mfa_string, curr_modal, show_modal, toggle_method){
    toggle_method('hide')
    $.ajax({
      type: "POST",
      url: "<%= RailsBase.url_routes.admin_verify_intent_path%>",
      headers: { 'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content') },
      dataType: 'json',
      data: { 'mfa_input': mfa_string },
      success: function(data) {
        $(`#${curr_modal}`).modal('hide');
        toggle_method('show');
        $(`#${show_modal}`).modal('show');
      },
      error: function(xhr, status, error) {
        $(`#${curr_modal}`).modal('hide');
        toggle_method('show');
        _rails_base_display_alert(xhr.responseJSON.message)
      }
    })
  }

  function admin_risky_icon_wait(){
    $('.risky-icon-og').hide()
    $('.risky-icon-mask').show()
  }
  function admin_risky_icon_proceed(){
    $('.risky-icon-og').show()
    $('.risky-icon-mask').hide()
  }

  function admin_pause_concurrency(){
    $('.admin-concurrent-block').bootstrapToggle('disable');
  }
  function admin_resume_concurrency(){
    $('.admin-concurrent-block').bootstrapToggle('enable');
  }
</script>
