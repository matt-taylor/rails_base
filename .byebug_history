continue
url
next
RailsBase.route_exist?(sso_decision.url_redirect)
sso_decision.url_redirect
sso_decision.data[:extra]
sso_decision.data.keys
sso_decision.data.extra
sso_decision.data
sso_decision
continue
Rails.application.routes.recognize_path(path)
path
continue
sso_decision.failure?
continue
current_user
continue
data_use
continue
datum
exit
call
continue
e
continue
next
exit
current_user
exit
browser.bot?
btowser
session
continue
TwilioHelper.send_sms(message: message(code), to: user.phone_number)
next
create_short_lived_data.data
data_point.data
continue
exit
session[:mfa_randomized_token]
params
validate_token!(purpose: Authentication::Constants::SSOVE_PURPOSE)
Authentication::Constants::SSOVE_PURPOSE
continue
continue!
RailsBase.url_routes.phone_registration_path
RailsBase.url_routes.phone_registration_url
RailsBase.url_routes.phone_registration
RailsBase.url_routes.sign_out(user)
RailsBase.url_routes
subject
sign_out(user)
continue
exit
RailsBase::EmailVerificationMailer.public_send(method, user: user, url: url).deliver_now
exit
RailsBase::EmailVerificationMailer.public_send(method, user: user, url: url).deliver_now
url
user
method
RailsBase::EmailVerificationMailer
exit
e.message
e.backtrace
continue
velocity
continue
Constants::URL_HELPER.public_send(url_method, params)
params
next
data
url_method
Constants::URL_HELPER.public_send(url_method, params)
Constants::BASE_URL
data
continue
exit
::RailsBase::Encryption
RailsBase::Encryption
Encryption
